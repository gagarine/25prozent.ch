<?php
/**
 * @file
 * Code for the pc_site feature.
 */

include_once 'pc_site.features.inc';


/**
 * hook_boot
 */
function pc_site_boot() {
    // Check if it's the front page
    // using hook_boot we avoid wasting resources
    // It's to early to use drupal_is_front_page because and we should avoid loading unnecessary extra resource
    if ($_GET['q'] == '' && isset($_SERVER['HTTP_ACCEPT_LANGUAGE'])) {
        // http_negotiate_language() is a better option but require  pecl_http >= 0.1.0
        // Locale::acceptFromHttp() require intl extension
        $langBrowser = substr($_SERVER['HTTP_ACCEPT_LANGUAGE'],0,2);

        // Get the activated language
        $langAvailable = language_list();

        // set a default in case the language is not avaible
        $lang = 'en';

        if(isset($langAvailable[$langBrowser]) ){
            $lang = $langAvailable[$langBrowser]->prefix;
        }

        $http_response_code = 302;
        header('Location: ' . $lang, TRUE, $http_response_code);

    }
}


function pc_site_form_user_register_form_alter(&$form, &$form_state, $form_id)
{
    $form['sms_user']['gateway']['country']['#type'] = 'value';
    $form['sms_user']['gateway']['country']['#value'] = 41;
    $form['sms_user']['number']['#description'] = t('Eg. 079 555 33 22. You will receive a message to confirm your mobile information upon login.');
    $form['sms_user']['number']['#title'] = t('Swiss mobile phone number');
    $form['sms_user']['number']['#attributes'] = array('placeholder' => '079 555 33 22');
    unset($form['sms_user']['#type']);
}

function pc_site_form_sms_user_settings_add_form_alter(&$form, &$form_state, $form_id)
{
    $form['gateway']['country']['#type'] = 'value';
    $form['gateway']['country']['#value'] = 41;
    $form['number']['#description'] = t('Eg. 079 555 33 22. You will receive a message to confirm your mobile information.');
    $form['number']['#title'] = t('Swiss mobile phone number');
    $form['number']['#attributes'] = array('placeholder' => '079 555 33 22');
}

function pc_site_form_sms_user_settings_reset_form_alter(&$form, &$form_state, $form_id)
{
    $form['vote_link'] = array(
        '#markup' => '<a href="/electoral-list" type="button" class="btn btn-primary btn-lg">' . t('Vote now!') . '</a>',
    );

}

/**
 * Implements hook_module_implements_alter().
 *
 * Move my_module_form_alter() to the end of the list. module_implements()
 * iterates through $implementations with a foreach loop which PHP iterates
 * in the order that the items were added, so to move an item to the end of
 * the array, we remove it and then add it
 */
function pc_site_module_implements_alter(&$implementations, $hook)
{
    if ($hook == 'form_alter') {
        if (isset($implementations['pc_site'])) {
            $group = $implementations['pc_site'];
            unset($implementations['pc_site']);
            $implementations['pc_site'] = $group;
        }
    }
}

/**
 * hook_init
 */
function pc_site_init()
{
    if (!empty($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest') {
        return;
    }
    if (!user_is_logged_in()) {
        return;
    }

    global $user;

    // user can't create vote therefor it didn't validate is number
    if (!user_access('create vote content')) {
        $url = '/user/' . $user->uid . '/edit/mobile';
        drupal_set_message(
            t('To vote, please  <a href="@url">validate your mobile phone number</a> first to verify you live in Switzerland.', array('@url' => $url)),
            'status',
            FALSE
        );
    } else {
        if (current_path() != 'electoral-list' && current_path() != 'node/add/vote') {

            // We need to check if the user already voted
            if (pc_site_user_has_voted() == false) {
                drupal_set_message(t("Don't forget to <a href='/electoral-list'>vote</a>."), 'status', FALSE);
            }
        }
    }
}

/**
 * Check if a user has allready voted or not
 *
 * @return bool
 */
function pc_site_user_has_voted(){
    global $user;
    $result = db_query("SELECT COUNT(*) FROM {node} WHERE type = 'vote' AND uid = :uid", array(':uid' => $user->uid));
    if($result->fetchField() < 1) {
        return false;
    }
    return true;
}